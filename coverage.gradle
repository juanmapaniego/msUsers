def jacocoExcludes = [
        'com/globallogic/jmpaniego/msusers/config/**',
        'com/globallogic/jmpaniego/msusers/exception/**',
        'com/globallogic/jmpaniego/msusers/mapper/**',
        'com/globallogic/jmpaniego/msusers/model/**',
        'com/globallogic/jmpaniego/msusers/Application.*',
        'com/globallogic/jmpaniego/msusers/utility/**',

]

jacocoTestReport {
    getExecutionData().from(fileTree(dir: "${buildDir}/jacoco", include: '**/*.exec'))
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        }))
    }
    violationRules {
        rule {
            enabled = true
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
        rule {
            enabled = true
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }

    }
}
jacocoTestReport {
    dependsOn test
}